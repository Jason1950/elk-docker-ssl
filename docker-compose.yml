version: '2.2'

services:
  es01:
    container_name: elk-es01
    image: docker.elastic.co/elasticsearch/elasticsearch:${ELASTIC_VERSION}
    environment:
      #basic
      - node.name=es01
      - discovery.type=single-node
      - ELASTIC_PASSWORD=$ELASTIC_PASSWORD 
      - "ES_JAVA_OPTS=-Xmx16g -Xms16g"
      - bootstrap.memory_lock=false
      - xpack.license.self_generated.type=basic
      # ssl settings
      - xpack.security.enabled=true
      - xpack.security.http.ssl.enabled=true
      - xpack.security.transport.ssl.enabled=true
      - xpack.security.transport.ssl.verification_mode=certificate 
      # ssl ca path
      - xpack.security.http.ssl.key=$CERTS_DIR/es01/es01.key
      - xpack.security.http.ssl.certificate_authorities=$CERTS_DIR/ca/ca.crt
      - xpack.security.http.ssl.certificate=$CERTS_DIR/es01/es01.crt
      - xpack.security.transport.ssl.certificate_authorities=$CERTS_DIR/ca/ca.crt
      - xpack.security.transport.ssl.certificate=$CERTS_DIR/es01/es01.crt
      - xpack.security.transport.ssl.key=$CERTS_DIR/es01/es01.key

    volumes:
      - certs:$CERTS_DIR:z
      # - data01:/usr/share/elasticsearch/data
    
    ulimits:
      memlock:
        soft: -1
        hard: -1
      nproc: 65535
      nofile:
        soft: 65535
        hard: 65535

    ports:
      - 9200:9200
    networks:
      - elk

    healthcheck:
      test: curl --cacert $CERTS_DIR/ca/ca.crt -s https://localhost:9200 >/dev/null; if [[ $$? == 52 ]]; then echo 0; else echo 1; fi
      interval: 30s
      timeout: 10s
      retries: 5

  kib01:
    image: docker.elastic.co/kibana/kibana:${ELASTIC_VERSION}
    container_name: elk-kib01
    restart: always
    env_file: .env
    depends_on:
      - es01
    ports:
      - 5601:5601


    networks:
      - elk
    volumes:
      - certs:$CERTS_DIR:z
      - ./kibana/kibana.yml:/usr/share/kibana/config/kibana.yml:z


  logs01:
    image: docker.elastic.co/logstash/logstash:${ELASTIC_VERSION}
    container_name: elk-logs01
    restart: always
    env_file: .env
    depends_on:
      - es01
    ports:
      - "5044:5044"
      - "50000:50000"
      - "9600:9600"
    volumes:
      - ./logstash/logstash.yml:/usr/share/logstash/config/logstash.yml
      - ./logstash/logstash.conf:/usr/share/logstash/pipeline/logstash.conf
      - certs:$CERTS_DIR:z
      # - ./logstash/ca.crt:/usr/share/logstash/config/ca.crt
      # - lsdata:/usr/share/logstash/data

    environment:
      - "LS_JAVA_OPTS=-Xmx1g -Xms1g"
    networks:
      - elk

  wait_until_ready:
    image: docker.elastic.co/elasticsearch/elasticsearch:${ELASTIC_VERSION}
    command: /usr/bin/true
    depends_on: {"es01": {"condition": "service_healthy"}}


networks:
  elk:
    driver: bridge
#volumes: {"data01", "data02", "lsdata", "certs"}
volumes: {"lsdata", "certs"}
