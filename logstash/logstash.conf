input {
        beats {
                port => 5044
        }

        tcp {
                port => 50000
        }
}
filter {
        if [@metadata][type] == "DLQ" {
                mutate {
                        remove_field => ["@version","msgJson"]
                        copy => { "[@metadata][dead_letter_queue]" => "dead_letter_queue" }
                }
	} else {
                # assume all incoming sources were using json format
                json {
                        source => "message"
                }
                grok {  
                        match =>  [ "message","%{URIPROTO}://(?:%{USER}(?::[^@]*)?@)?(?:%{URIHOST})?(?:%{URIPATHPARAM:api_name})?" ]
                }

		# if useJson=0 or isDataStream, don't deserialize message
		# if [useJson] == "0" or [data_stream] {
		#if [useJson] == "1" {
		#	json {
		#		source => "message"
		#		target => "msgJson"
		#	}
		#} else if ![useJson] and ![data_stream] {
		#	json {
		#		source => "message"
		#		target => "msgJson"
		#	}
		#}
                mutate {
                        remove_field => ["@version","host","port"]
                }
        }
}

## Add your filters / logstash plugins configuration here

output {
        if [data_stream] {
                elasticsearch {
                        hosts => ["https://es01:9200"]
                        user => "elastic"
                        password => "changeme"
                        cacert => "/usr/share/elasticsearch/config/certificates/ca/ca.crt"
                        ecs_compatibility => "v1"
			data_stream => "true"
                }
	}
        else if [Application] and [Environment]{
                
                elasticsearch {
                        hosts => ["https://es01:9200"]
                        user => "elastic"
                        password => "changeme"
                        cacert => "/usr/share/elasticsearch/config/certificates/ca/ca.crt"
                        ecs_compatibility => disabled
                        index => "%{[Application]}-%{[Environment]}-%{+YYYY.MM.dd}"
                        #ecs_compatibility => enabled

                        #data_stream => "true"

                        ## 生命週期管理參數
                        #ilm_rollover_alias => "logstash05"
                        #ilm_pattern => "000001"
                        #ilm_policy => "logstash05"
                }

        }
        else if [appName] {
                elasticsearch {
                        hosts => ["https://es01:9200"]
                        user => "elastic"
                        password => "changeme"
                        cacert => "/usr/share/elasticsearch/config/certificates/ca/ca.crt"
                        ecs_compatibility => disabled
                        index => "%{[appName]}-%{+YYYY.MM.dd}"

                        ## 生命週期管理參數 
                        #ilm_rollover_alias => "logstash05"
                        #ilm_pattern => "000001"
                        #ilm_policy => "logstash05"
                }
        }
        else {
                elasticsearch {
                        hosts => ["https://es01:9200"]
                        user => "elastic"
                        password => "changeme"
                        cacert => "/usr/share/elasticsearch/config/certificates/ca/ca.crt"
                        ecs_compatibility => disabled
                        index => "log-logstash-others-%{+YYYY.MM.dd}"

                        ## 生命週期管理參數 
                        #ilm_rollover_alias => "logstash05"
                        #ilm_pattern => "000001"
                        #ilm_policy => "logstash05"
                }
        }
}
